/////////////////////////////////////////////////
//                                             //
// Automatically generated by the              //
// AddonGenerator script by Arya               //
//                                             //
/////////////////////////////////////////////////
using System;
using Server;
using Server.Items;
using Server.Mobiles;

namespace Server.Items
{
    public class AG_SwampPatchAddon : BaseAddon
    {
        public override BaseAddonDeed Deed
        {
            get
            {
                return new AG_SwampPatchAddonDeed();
            }
        }

        [Constructable]
        public AG_SwampPatchAddon()
        {
            AddonComponent ac;
            ac = new AddonComponent(12923);
            AddComponent(ac, -2, 2, 0);
            ac = new AddonComponent(12916);
            AddComponent(ac, 0, 3, 0);
            ac = new AddonComponent(12898);
            AddComponent(ac, -1, 1, 0);
            ac = new AddonComponent(12919);
            AddComponent(ac, -2, 1, 0);
            ac = new AddonComponent(12920);
            AddComponent(ac, 2, 1, 0);
            ac = new AddonComponent(12922);
            AddComponent(ac, 2, 2, 0);
            ac = new AddonComponent(12924);
            AddComponent(ac, 1, 0, 0);
            ac = new AddonComponent(12921);
            AddComponent(ac, -2, 0, 0);
            ac = new AddonComponent(12922);
            AddComponent(ac, 2, 1, 0);
            ac = new AddonComponent(12930);
            AddComponent(ac, -1, -1, 0);
            ac = new AddonComponent(12925);
            AddComponent(ac, 1, 2, 0);
            ac = new AddonComponent(12920);
            AddComponent(ac, 1, 0, 0);
            ac = new AddonComponent(12901);
            AddComponent(ac, 1, 1, 0);
            ac = new AddonComponent(12897);
            AddComponent(ac, 0, 0, 0);
            ac = new AddonComponent(12932);
            AddComponent(ac, 1, 3, 0);
            ac = new AddonComponent(12920);
            AddComponent(ac, 2, 0, 0);
            ac = new AddonComponent(12927);
            AddComponent(ac, 0, -1, 0);
            ac = new AddonComponent(12928);
            AddComponent(ac, 1, -1, 0);
            ac = new AddonComponent(12926);
            AddComponent(ac, -1, 2, 0);
            ac = new AddonComponent(12931);
            AddComponent(ac, -1, 3, 0);
            ac = new AddonComponent(12905);
            AddComponent(ac, 1, 2, 0);
            ac = new AddonComponent(12854);
            AddComponent(ac, 0, 1, 0);
            ac = new AddonComponent(12896);
            AddComponent(ac, 0, 2, 0);
            ac = new AddonComponent(12927);
            AddComponent(ac, -1, 0, 0);

        }
        public override bool HandlesOnMovement { get { return true; } } // Tell the core that we implement OnMovement

        public override void OnMovement(Mobile m, Point3D oldLocation)
        {
            #region NPC Welcomes Player

            if (m.InRange(this, 0) && m is PlayerMobile)
            {
                Effects.SendLocationEffect(m, m.Map, 0x113A, 20, 10); //Posion Player
                m.PlaySound(0x231);
                m.ApplyPoison(m, Poison.Regular);
            }
            #endregion
        }



        public AG_SwampPatchAddon(Serial serial)
            : base(serial)
        {
        }

        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);
            writer.Write(0); // Version
        }

        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);
            int version = reader.ReadInt();
        }
    }

    public class AG_SwampPatchAddonDeed : BaseAddonDeed
    {
        public override BaseAddon Addon
        {
            get
            {
                return new AG_SwampPatchAddon();
            }
        }

        [Constructable]
        public AG_SwampPatchAddonDeed()
        {
            Name = "AG_SwampPatch";
        }

        public AG_SwampPatchAddonDeed(Serial serial)
            : base(serial)
        {
        }

        public override void Serialize(GenericWriter writer)
        {
            base.Serialize(writer);
            writer.Write(0); // Version
        }

        public override void Deserialize(GenericReader reader)
        {
            base.Deserialize(reader);
            int version = reader.ReadInt();
        }
    }
}